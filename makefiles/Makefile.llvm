#
# Makefile - create llvm/clang
# Copyright (C) 2015-2016 Heiko Abraham
# All rights reserved.
#

include Makefile.def

TARGET=arm-none-eabi

.PHONY: build
build:
	$(MAKE) -f $(MAKEFILENAME) $(PREFIX)/bin/$(TARGET)-clang


.PHONY: clean
clean:
	$(RM) -f $(PREFIX)/bin/$(TARGET)-clang
	$(RM) -rf    $(BUILD_DIR)/$(LLVM_VERSION)
	$(RM) -rf    $(BUILD_DIR)/$(LLVM_VERSION).src
	$(RM) -rf    $(BUILD_DIR)/$(LLVM_VERSION).build


.PHONY: install
install:


$(PREFIX)/bin/$(TARGET)-clang:
	$(MAKE) -f $(MAKEFILENAME) build_clang


.PHONY: extract_clang
extract_clang:
	( cd $(BUILD_DIR)/$(LLVM_VERSION).src/tools/ && $(RM) -rf $(CLANG_VERSION) )
	( cd $(BUILD_DIR)/$(LLVM_VERSION).src/tools/ && $(RM) -rf $(CLANG_VERSION).src )
	$(PATH_EXT) xz --decompress --stdout $(DOWNLOAD_DIR)/$(CLANG_VERSION).tar.xz | \
		tar -x -C $(BUILD_DIR)/$(LLVM_VERSION).src/tools/
	( cd $(BUILD_DIR)/$(LLVM_VERSION).src/tools && mv $(CLANG_VERSION).src clang )


.PHONY: build_clang
build_clang: $(BUILD_DIR)
	env
	$(RM) -rf    $(BUILD_DIR)/$(LLVM_VERSION)
	$(RM) -rf    $(BUILD_DIR)/$(LLVM_VERSION).src
	$(RM) -rf    $(BUILD_DIR)/$(LLVM_VERSION).build
	$(MKDIR) -p  $(BUILD_DIR)/$(LLVM_VERSION).build
	$(PATH_EXT) xz --decompress --stdout $(DOWNLOAD_DIR)/$(LLVM_VERSION).tar.xz |\
		tar -x -C $(BUILD_DIR)
	$(MAKE) -f $(MAKEFILENAME) extract_clang
	( cd $(BUILD_DIR)/$(LLVM_VERSION).build && \
		$(PATH_EXT) cmake ../$(LLVM_VERSION).src \
		-G "Unix Makefiles" \
		-DCMAKE_BUILD_TYPE=Release \
		-DCMAKE_INSTALL_PREFIX=$(PREFIX) \
		-DCMAKE_PREFIX_PATH=$(PREFIX)/prefix_path \
		-DCMAKE_CROSSCOMPILING=True \
		-DLLVM_TARGETS_TO_BUILD=ARM \
		-DLLVM_DEFAULT_TARGET_TRIPLE=$(TARGET) \
		-DCMAKE_PROGRAM_PREFIX=$(TARGET)- \
		-DLLVM_TARGET_ARCH=host \
		-DLLVM_ENABLE_PIC=True \
		-DLLVM_ENABLE_THREADS=ON \
		-DLLVM_ENABLE_ASSERTIONS:BOOL=OFF \
		-DLLVM_ENABLE_CXX1Y:BOOL=ON \
		-DLLVM_BUILD_DOCS=Off \
		-DLLVM_BUILD_LLVM_DYLIB=ON \
		-DLLVM_LINK_LLVM_DYLIB=ON \
		-DLLVM_CREATE_XCODE_TOOLCHAIN:BOOL=OFF \
		-DLLVM_OPTIMIZED_TABLEGEN:BOOL=ON \
		-DLLVM_PARALLEL_COMPILE_JOBS:STRING=$(NUM_CPUS) )
	( cd $(BUILD_DIR)/$(LLVM_VERSION).build && \
		$(PATH_EXT) time make $(MJOBS) )
	( cd $(BUILD_DIR)/$(LLVM_VERSION).build && \
		$(PATH_EXT) time make install )


# https://github.com/sushihangover/llvm_baremetal/tree/master/scripts
# -DCMAKE_INSTALL_PREFIX="$TARGET_ROOT/$TARGET_TRIPLE"
# -DCMAKE_PREFIX_PATH=$TARGET_ROOT
# -DGCC_INSTALL_PREFIX="$TARGET_ROOT/$TARGET_TRIPLE"
# LLVM_EXTERNAL_{CLANG,LLD,POLLY}_SOURCE_DIR:PATH

